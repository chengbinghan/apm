<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="apm.web.dao.apmmysql.ApmErrorDao">


    <select id="getTransactionErrPerList" parameterType="hashMap" resultMap="apmErrorMap">

SELECT
  err_table.appId                                           AS appId,
  err_table.errRpc                                          AS rpc,
  err_table.errTotalCount                                   AS errMethodCount,
  correct_table.correctTotalCount                           AS totalMethodCount,
  err_table.errTotalCount / correct_table.correctTotalCount AS errPer,
  (SELECT count(1) FROM span sp4 WHERE sp4.applicationId = err_table.appId AND sp4.rpc = err_table.errRpc) AS invokeCount
FROM

  (SELECT
     sp1.rpc           AS errRpc,
     count(1)          AS errTotalCount,
     sp1.applicationId AS appId

   FROM span_event se2, span sp1
   WHERE se2.spanId = sp1.spanId
         AND se2.exceptionId IS NOT NULL
         AND sp1.applicationId = #{appId}
         AND sp1.startTime > (SELECT UNIX_TIMESTAMP() * 1000 - #{startTime})
) AS err_table,

  (SELECT
     sp1.rpc           AS correctRpc,
     count(1)          AS correctTotalCount,
     sp1.applicationId AS correctAppId

   FROM span sp1,span_event se1
   WHERE
     sp1.applicationId = #{appId}
       AND
         se1.spanId = sp1.spanId
     AND sp1.startTime > (SELECT UNIX_TIMESTAMP() * 1000 - #{startTime})
   GROUP BY sp1.rpc) AS correct_table


WHERE err_table.errRpc = correct_table.correctRpc  GROUP BY rpc ORDER by errPer DESC ;
    </select>


    <select id="getErrPerErrCount" parameterType="java.lang.String" resultMap="AppErrByCountMap">

        SELECT
        sp1.applicationId as appId,
        sp1.startTime ,
        sp1.rpc,

        ((SELECT count(1)
        FROM
        span_event se2, span sp2
        WHERE
        se2.exceptionId IS NOT NULL
        AND
        sp2.spanId = se2.spanId
        AND
        sp2.applicationId = '11'
        AND
        sp2.startTime = sp1.startTime
        AND
        (SELECT UNIX_TIMESTAMP() * 1000 - 1111111111111111111)
        AND sp2.startTime >= countLimitTable.minTime
        AND sp2.startTime <![CDATA[   <=  ]]>countLimitTable.maxTime
        )
        /
        (
        (SELECT count(1)
        FROM
        span_event se3, span sp3
        WHERE
        sp3.spanId = se3.spanId
        AND
        sp3.applicationId = '11'
        AND
        sp3.startTime = sp1.startTime
        AND
        (SELECT UNIX_TIMESTAMP() * 1000 - 1111111111111111111)
        AND sp3.startTime >= countLimitTable.minTime
        AND sp3.startTime <![CDATA[   <=  ]]> countLimitTable.maxTime
        )

        )) AS errPer

        FROM
        span sp1,

        (SELECT
        min(t.startTime) AS minTime,
        max(t.startTime) AS maxTime
        FROM
        (
        SELECT sp4.startTime
        FROM
        span_event se4,
        span sp4

        WHERE
        se4.exceptionId IS NOT NULL
        AND
        sp4.spanId = se4.spanId
        AND
        sp4.applicationId = '11'
        AND
        (SELECT UNIX_TIMESTAMP() * 1000 - 1111111111111111111)
        GROUP BY sp4.spanId
        ORDER BY sp4.startTime
        LIMIT 0, 2) as t) AS countLimitTable

        WHERE
        sp1.applicationId = '11'
        AND sp1.startTime >= countLimitTable.minTime
        AND sp1.startTime <![CDATA[   <=  ]]> countLimitTable.maxTime;

    </select>

    <select id="getLastErrorList" parameterType="hashMap" resultMap="errListMap">
SELECT
  se1.startElapsed as startElapsed,
  se1.exceptionMessage as exceptionMsg,
  sp1.rpc as rpc,
  sp1.applicationId as appId
FROM
span sp1,
span_event se1
WHERE
  sp1.startTime > (SELECT UNIX_TIMESTAMP() * 1000 - 1111111111111111111)
  AND
  sp1.applicationId = '11'
  AND
  sp1.spanId = se1.spanId
  AND
  se1.exceptionId IS NOT NULL
ORDER BY se1.startElapsed LIMIT 1,30;
    </select>

    <resultMap id="errListMap" type="apm.web.beans.vo.ErrMsgVO">
        <result property="rpc" column="rpc"/>
        <result property="appId" column="appId"/>
        <result property="exceptionMsg" column="exceptionMsg"/>
        <result property="startElapsed" column="startElapsed"/>
    </resultMap>


    <resultMap id="AppErrByCountMap" type="apm.web.beans.vo.AppErrByCount">
        <result property="appId" column="appId"/>
        <result property="rpc" column="rpc"/>
        <result property="errPer" column="errPer"/>
        <result property="startTime" column="startTime"/>
    </resultMap>


    <resultMap id="apmErrorMap" type="apm.web.beans.vo.TransactionErrorVO">

        <result property="appId" column="appId"/>
        <result property="rpc" column="rpc"/>
        <result property="errCount" column="errMethodCount"/>
        <result property="totalMethodCount" column="totalMethodCount"/>
        <result property="invokeCount" column="invokeCount"/>
        <result property="errPer" column="errPer"/>

    </resultMap>

</mapper>
