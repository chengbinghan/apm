<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="apm.web.dao.apmmysql.DataBaseDao">
    <select id="getDbOverView" resultMap="dbOverViewMap" parameterType="hashMap">
 SELECT
   sql1.sqlMetaDataId as sqlId,
   sp1.rpc as rpc,
   api1.apiInfo as apiInfo,
   sum(se1.endElapsed) as totalTime
 from
   span_event se1 ,
   span sp1,
   sql_meta_data_ver2 sql1,
   api_meta_data api1
 WHERE
   se1.spanId =sp1.spanId
   AND
   sp1.applicationId = #{appId}
   AND
   sql1.sqlMetaDataId = se1.sqlId
   AND
   se1.apiId = api1.apiId
   AND
   sp1.startTime > (SELECT UNIX_TIMESTAMP() * 1000 - #{beginTime})
 GROUP BY
   se1.sqlId order by totalTime
    </select>

    <select id="getTopNExpensiveSql" parameterType="hashMap" resultMap="topNSqlMap">


        SELECT
        se1.sqlId as sqlId,
  sp1.rpc as rpc,
  api1.apiInfo as apiInfo,
  sum(se1.endElapsed) as totalTime,
  avg(se1.endElapsed) as avgTime,
  min(se1.endElapsed) as minTime,
  max(se1.endElapsed) as maxTime,
  count(1) as invokeTime
from
  span_event se1 ,
  span sp1,
  sql_meta_data_ver2 sql1,
  api_meta_data api1
WHERE
  se1.spanId =sp1.spanId
  AND
  sp1.applicationId = #{appId}
  AND
  sql1.sqlMetaDataId = se1.sqlId
  AND
  se1.apiId = api1.apiId
  AND
  sp1.startTime > (SELECT UNIX_TIMESTAMP() * 1000 - #{beginTime})
GROUP BY
  se1.sqlId order by totalTime  limit 0,#{topN};

    </select>

    <select id="getExpensiveSqlByThreshold" parameterType="hashMap" resultMap="topNSqlMap">

SELECT

  se1.sqlId as sqlId,
  sp1.rpc as rpc,
  api1.apiInfo as apiInfo,
  sum(se1.endElapsed) as totalTime,
  avg(se1.endElapsed) as avgTime,
  min(se1.endElapsed) as minTime,
  max(se1.endElapsed) as maxTime,
  count(1) as invokeTime
from
  span_event se1 ,
  span sp1,
  sql_meta_data_ver2 sql1,
  api_meta_data api1
WHERE
  se1.spanId =sp1.spanId
  AND
  sp1.applicationId = #{appId}
  AND
  sql1.sqlMetaDataId = se1.sqlId
  AND
  se1.apiId = api1.apiId
  AND
  sp1.startTime > (SELECT UNIX_TIMESTAMP() * 1000 - #{beginTime})
  AND
  se1.endElapsed >= #{slowSqlThreshold}
GROUP BY
  se1.sqlId order by totalTime;
    </select>


    <select id="getTheSqlInfo" parameterType="hashMap" resultMap="topNSqlMap">
        SELECT
  sql1.sqlInfo as sqlInfo,
  se1.sqlId as sqlId,
  sp1.rpc as rpc,
  api1.apiInfo as apiInfo,
  sum(se1.endElapsed) as totalTime,
  avg(se1.endElapsed) as avgTime,
  min(se1.endElapsed) as minTime,
  max(se1.endElapsed) as maxTime,
  count(1) as invokeTime
from
  span_event se1 ,
  span sp1,
  sql_meta_data_ver2 sql1,
  api_meta_data api1
WHERE
  se1.spanId =sp1.spanId
  AND
  sp1.applicationId = #{appId}
  AND
  sql1.sqlMetaDataId = se1.sqlId
  AND
  se1.apiId = api1.apiId
  AND
  sp1.startTime > (SELECT UNIX_TIMESTAMP() * 1000 - #{startTime})
 AND se1.sqlId = #{sqlId};
    </select>


    <select id="getDabaseResponse" parameterType="hashMap" resultMap="sqlResponseMap">
SELECT
  se1.endElapsed   AS elapsed,
  se1.startElapsed AS executeTime,
  sql1.sqlInfo     AS sqlInfo,
  sp1.rpc          AS rpc,
  api1.apiInfo,
  se1.spanEventId

FROM
  span_event se1,
  span sp1,
  sql_meta_data_ver2 sql1,
  api_meta_data api1
WHERE
  se1.spanId = sp1.spanId
  AND sp1.applicationId = #{appId}
  AND se1.apiId = api1.apiId
  AND se1.sqlId != 0

  AND
  ((SELECT UNIX_TIMESTAMP() * 1000 - #{startTime}))
GROUP BY spanEventId
ORDER BY
  se1.startElapsed
LIMIT 0, 1000;
    </select>

    <select id="getDBSqlListBySqlId" parameterType="hashMap" resultMap="sqlResponseMap">

SELECT
  se1.endElapsed   AS elapsed,
  se1.startElapsed AS executeTime,
  sql1.sqlInfo     AS sqlInfo,
  sp1.rpc          AS rpc,
  api1.apiInfo,
  se1.spanEventId

FROM
  span_event se1,
  span sp1,
  sql_meta_data_ver2 sql1,
  api_meta_data api1
WHERE
  se1.spanId = sp1.spanId
  AND sp1.applicationId = #{appId}
  AND se1.apiId = api1.apiId
  AND se1.sqlId = #{sqlId}

  AND
  ((SELECT UNIX_TIMESTAMP() * 1000 - #{startTime}))
GROUP BY spanEventId
ORDER BY
  se1.startElapsed
LIMIT 0, 30;






    </select>

    <resultMap id="sqlResponseMap" type="apm.web.beans.vo.DatabaseResponseVO">

       <result property="executeTime" column="executeTime"/>
       <result property="elpased" column="elpased"/>
       <result property="sqlInfo" column="sqlInfo"/>
       <result property="apiInfo" column="apiInfo"/>
       <result property="rpc" column="rpc"/>
       <result property="spanEventId" column="spanEventId"/>
       <result property="apiInfo" column="apiInfo"/>

    </resultMap>


    <resultMap id="topNSqlMap" type="apm.web.beans.vo.TopNSqlVO">

        <result property="invokeTime" column="invokeTime"/>
        <result property="minTime" column="minTime"/>
        <result property="maxTime" column="maxTime"/>
        <result property="avgTime" column="avgTime"/>
        <result property="dataBaseSqlViewVO.totalTime" column="totalTime"/>
        <result property="dataBaseSqlViewVO.apiInfo" column="apiInfo"/>
        <result property="dataBaseSqlViewVO.rpc" column="rpc"/>
        <result property="dataBaseSqlViewVO.sqlId" column="sqlId"/>
        <result property="dataBaseSqlViewVO.sqlInfo" column="sqlInfo"/>

    </resultMap>


    <resultMap id="dbOverViewMap" type="apm.web.beans.vo.DataBaseSqlViewVO">
        <result property="rpc" column="rpc"/>
        <result property="apiInfo" column="apiInfo"/>
        <result property="sqlInfo" column="sqlInfo"/>
        <result property="totalTime" column="totalTime"/>
        <result property="sqlId"  column="sqlId"/>
    </resultMap>


</mapper>
